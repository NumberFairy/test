package com.wisdombud.alumni.actions.manage;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.hibernate.criterion.Order;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;

import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import com.opensymphony.xwork2.ActionContext;
import com.wisdombud.alumni.actions.base.AbstractCrudAction;
import com.wisdombud.alumni.common.IBaseSrv;
import com.wisdombud.alumni.constants.Constants;
import com.wisdombud.alumni.manage.BaseActivitySignUpSrv;
import com.wisdombud.alumni.manage.BaseAlumniActivitySrv;
import com.wisdombud.alumni.manage.BaseAlumniLiaisonSrv;
import com.wisdombud.alumni.manage.BaseAlumniSrv;
import com.wisdombud.alumni.pojo.manage.BaseActivitySignUp;
import com.wisdombud.alumni.pojo.manage.BaseAlumni;
import com.wisdombud.alumni.pojo.manage.BaseAlumniActivity;
import com.wisdombud.alumni.threadlocal.UserSession;
import com.wisdombud.alumni.vo.Param;

import common.toolkit.java.entity.PageEntity;

/**
 * 功能: 校友活动表<br/>
 * date: 2017-3-28 19:28:27 <br/>
 *
 * @author robot
 * @version
 * @since JDK 1.8
 */
@Scope("basealumniactivity")
@ParentPackage(value = "portal-default")
@Namespace(value = "/")
@Results({ @Result(name = "toAddOrUpdate", location = "/WEB-INF/jsp/alumni-activity-manage/create.jsp"),
		   @Result(name = "toDetail", location = "/WEB-INF/jsp/alumni-activity-manage/detail.jsp"),
		   @Result(name = "toSignUpPage", location = "/WEB-INF/jsp/alumni-activity-manage/sign-up-page.jsp"),
		   @Result(name = "toSignUpDetail", location = "/WEB-INF/jsp/alumni-activity-manage/sign-up-detail.jsp"),
		   @Result(name = "toPage", location = "/WEB-INF/jsp/alumni-activity-manage/page.jsp") ,
		   @Result(name = "launchEvent", location = "/WEB-INF/jsp/portal/alumni-login/launch-event/list.jsp")})
public class AlumniActivityAction extends AbstractCrudAction<BaseAlumniActivity> {

	private static final long	serialVersionUID = 1L;
	
	@Autowired
	public BaseAlumniLiaisonSrv	baseAlumniLiaisonSrv;
	@Autowired
	public BaseAlumniSrv	alumniSrv;
	@Autowired
	public BaseActivitySignUpSrv	signUpSrv;
	@Autowired
	public BaseAlumniActivitySrv	srv;
	
	public String signUpId;
	public String alumniId;
	public BaseAlumni alumni;
	public AlumniActivityAction(@Qualifier(value = "baseAlumniActivitySrv") IBaseSrv<BaseAlumniActivity> baseSrv) {
		super(baseSrv);
	}

	@Override
	protected List<Order> buildOrder() {
		List<Order> list = Lists.newArrayList();
		list.add(Order.desc("lastUpdate"));
		return list;
	}

	@Override
	protected Map<String, Param> buildParams() {
		Map<String, Param> params = Maps.newHashMap();
		if (this.entity != null) {
			if (StringUtils.isNotEmpty(this.entity.getTitle())) {
				params.put("title", Param.like(this.entity.getTitle()));
			}
			if (StringUtils.isNotEmpty(this.entity.getPerson())) {
				params.put("person", Param.like(this.entity.getPerson()));
			}
			if (this.entity.getIsQiYong() != -1) {
				params.put("isQiYong", Param.eq(this.entity.getIsQiYong()));
			}
		}
		return params;
	}
	
	@Override
	protected void add() {
		final UserSession userSession = (UserSession) ActionContext.getContext().getSession().get("UserSession");
		String  userName=userSession.getId();
		entity.setPerson(userName);
		super.add();
	}

	public String hrefSignUpPage(){
		return "toSignUpPage";
	}
	
	public String hrefMyActivityPage(){
		return "toMyActivity";
	}
	
	public void signUpPage(){
		if (this.isAjaxRequest()) {
			this.limit = this.limit == 0 ? Constants.DEFUALT_PAGESIZE : this.limit;
			PageEntity<BaseActivitySignUp>	signUpPageEntity = new PageEntity<>(start, limit);
			final Map<String, Param> params = this.buildSignUpParams();
			final List<Order> orderList = this.buildSignUpOrder();
			signUpSrv.page(signUpPageEntity, params, orderList);
			this.sendResponseMsg(signUpPageEntity);
		}
	}
	
	private Map<String, Param> buildSignUpParams(){
		Map<String, Param> params=Maps.newHashMap();
		params.put("activityId",Param.eq(this.signUpId));
		return params;
	}
	
	private List<Order> buildSignUpOrder(){
		return Lists.newArrayList();
	}
	
	public String hrefSignUpDetail(){
		this.alumni=srv.findAlumni(alumniId);
		return "toSignUpDetail";
	}
	public void signUpDetail(){
		
	}

	public String getSignUpId() {
		return signUpId;
	}

	public void setSignUpId(String signUpId) {
		this.signUpId = signUpId;
	}

	public BaseAlumni getAlumni() {
		return alumni;
	}

	public void setAlumni(BaseAlumni alumni) {
		this.alumni = alumni;
	}

	public String getAlumniId() {
		return alumniId;
	}

	public void setAlumniId(String alumniId) {
		this.alumniId = alumniId;
	}
}
