package com.wisdombud.alumni.actions.information;

import java.util.List;
import org.apache.commons.collections.CollectionUtils;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.wisdombud.alumni.pojo.system.HomeMenu;
import com.wisdombud.alumni.system.HomeMenuSrv;
import common.toolkit.java.entity.DateFormat;
import common.toolkit.java.struts2.AbstractCommonAction;

/**
 * 门户菜单<br>
 * 门户菜单均根据menuId获取数据<br>
 * 菜单数据通过HomeMenu.url<br>
 * ROOT菜单默认获取其第一个子菜单数据<br>
 * 
 * @author xiefei
 */
@Scope("prototype")
@ParentPackage(value = "portal-default")
@Namespace(value = "/")
@Results({ @Result(name = "home", location = "/WEB-INF/jsp/portal/index2.jsp"),
		   @Result(name = "list", location = "/WEB-INF/jsp/portal/list.jsp"),
		   @Result(name = "detail", location = "/WEB-INF/jsp/portal/detail.jsp"), })
public class HomeAction extends AbstractCommonAction {
	private static final long serialVersionUID = 1L;

	@Autowired
	private HomeMenuSrv		  srv;

	private Integer			  menuId;
	private HomeMenu		  menu;

	@Override
	public String execute() throws Exception {
		return "home";
	}

	/**
	 * @DES:导航栏菜单
	 * @autor:xiefei<br/>
	 */
	public void homeMenus() {
		final Gson g = new GsonBuilder().setDateFormat(DateFormat.DateTime.getFormat()).create();
		this.sendResponseMsg(g.toJson(srv.buildHomeTree()));
	}

	/**
	 * @DES:左侧菜单
	 * @autor:xiefei<br/>
	 */
	public void leftMenus() {
		if (menuId == null) {
			sendFailMsg("", "");
			return;
		}
		final Gson g = new GsonBuilder().setDateFormat(DateFormat.DateTime.getFormat()).create();
		this.sendResponseMsg(g.toJson(srv.findLeftMenu(menuId)));
	}

	/**
	 * @DES:判断是列表还是详情
	 * @autor:xiefei<br/>
	 */
	public String load() {
		if (menuId == null) {
			return "home";
		}
		menu = srv.findUniqueBy("menuId", menuId);
		if (menu == null) {
			return "home";
		}
		// 根节点菜单，选中子节点的第一个节点
		if (menu.getParentId() == HomeMenu.ROOT) {
			List<HomeMenu> menus = srv.findChildrenMenu(menuId);
			if (CollectionUtils.isNotEmpty(menus)) {
				menu = menus.get(0);
			}
		}
		if (menu.getType() == HomeMenu.TYPE_LIST) {
			return "list";
		}
		if (menu.getType() == HomeMenu.TYPE_DETAIL) {
			return "detail";
		}
		return "home";
	}

	public String list() {
		return "list";
	}

	public String detail() {
		return "detail";
	}

	public Integer getMenuId() {
		return menuId;
	}

	public void setMenuId(Integer menuId) {
		this.menuId = menuId;
	}

	public HomeMenu getMenu() {
		return menu;
	}

	public void setMenu(HomeMenu menu) {
		this.menu = menu;
	}

}
