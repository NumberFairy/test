package com.wisdombud.alumni.manage.impl;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.commons.lang3.StringUtils;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.hssf.util.HSSFColor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.wisdombud.alumni.manage.AlumExcel;
import com.wisdombud.alumni.manage.BaseAlumniSrv;
import com.wisdombud.alumni.manage.ExcelXiaoYouService;
import com.wisdombud.alumni.pojo.manage.BaseAlumni;

@Service
public class ExcelXiaoYouServiceImpl implements ExcelXiaoYouService {
	@Autowired
	private BaseAlumniSrv alumniInfoService;
	
	private BaseAlumni now;
	private Map<Integer, String> ident;

	/**
	 * @DES:导出excel
	 * @autor:xiefei<br/>
	 */
	public void export(String ids, String filds, HSSFWorkbook wb) {
//		identity();
		String[] fildsList;
		if (StringUtils.isBlank(filds)) {
			fildsList = StringUtils.join(AlumExcel.allFilds().toArray(), ",").split(",");
		} else {
			fildsList = filds.split(",");
		}
		HSSFSheet sheet = wb.createSheet();
		for (int i = 0; i < fildsList.length; i++) {
			sheet.setColumnWidth(i, 5000);
		}
		// header
		header(wb, sheet, fildsList);
//		// body
//		List<BaseAlumni> info = new ArrayList<>();
//		if (StringUtils.isBlank(ids)) {
//			info = alumniInfoService.getAll();
//		} else {
//			List<Long> list = new ArrayList<>();
//			String[] idList = ids.split(",");
//			for (String id : idList) {
//				list.add(new Long(id));
//			}
//			info = alumniInfoService.queryExportDataByIds(list);
//		}

//		body(info, sheet, wb, fildsList);
	}


	/**
	 * @DES:创建表头
	 * @autor:xiefei<br/>
	 */
	private void header(HSSFWorkbook wb, HSSFSheet sheet, String[] fildsList) {
		HSSFCellStyle style = wb.createCellStyle();
		style.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		HSSFFont font = wb.createFont();
		font.setColor(HSSFColor.BLACK.index);
		font.setFontHeightInPoints((short) 18);
		style.setFont(font);
		HSSFRow row = sheet.createRow(0);
		int i = 0;
		for (String id : fildsList) {
			HSSFCell cell = row.createCell(i++);
			int fId = new Integer(id);
			if (AlumExcel.remark.getId() > fId) {
				cell.setCellValue(AlumExcel.find(fId).getStr());
			} else {
				cell.setCellValue("备注" + (fId + 1 - AlumExcel.remark.getId()));
			}

			cell.setCellStyle(style);
		}
	}

	/**
	 * @DES:创建表单
	 * @autor:xiefei<br/>
	 */
	private void body(List<BaseAlumni> info, HSSFSheet sheet, HSSFWorkbook wb, String[] fildsList) {
		HSSFCellStyle style = wb.createCellStyle();
		style.setAlignment(HSSFCellStyle.ALIGN_CENTER);
		HSSFFont font = wb.createFont();
		font.setColor(HSSFColor.BLACK.index);
		font.setFontHeightInPoints((short) 16);
		style.setFont(font);
		int i = 1;
		for (BaseAlumni s : info) {
			now = s;
			HSSFRow row = sheet.createRow(i++);
			row.setRowStyle(style);
			int j = 0;
			for (String fild : fildsList) {
				row.createCell(j++).setCellValue(setCell(fild));
			}
		}
	}

	private String setCell(String fild) {
		String val = "";
		Integer fildId = new Integer(fild);

//		if (AlumExcel.alumniIdentity.getId() == fildId) {
//			String v = now.getAlumniIdentity();
//			if (StringUtils.isNotBlank(v)) {
//				String[] ids = v.split(",");
//				for (String id : ids) {
//					val += ident.get(new Integer(id)) + " ";
//				}
//			}
//		}
//		if (AlumExcel.nativeCity.getId() == fildId) {
//			val = (StringUtils.isBlank(now.getNativeProvince()) ? "" : now.getNativeProvince())
//					+ (StringUtils.isBlank(now.getNativeCity()) ? "" : now.getNativeCity());
//		} else if (AlumExcel.city.getId() == fildId) {
//			val = (StringUtils.isBlank(now.getProvince()) ? "" : now.getProvince())
//					+ (StringUtils.isBlank(now.getCity()) ? "" : now.getCity());
//		} else if (AlumExcel.remark.getId() < fildId) {
//			val = (String) getFieldValue(now, "remark" + (fildId + 1 - AlumExcel.remark.getId()));
//		} else {
//			String filds = AlumExcel.find(fildId).name();
//			val = (String) getFieldValue(now, filds);
//		}
		return val;
	}

	public Object getFieldValue(BaseAlumni now, String fieldName) {
		Set<Field> fields = new HashSet<Field>();
		Field[] tempFields = now.getClass().getDeclaredFields();
		for (Field field : tempFields) {
			field.setAccessible(true);
			fields.add(field);
		}
		for (Field field : fields) {
			if (field.getName().equals(fieldName)) {
				try {
					return field.get(now);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}
		return null;
	}
}
