package com.wisdombud.alumni.actions.manage;

import java.util.List;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts2.convention.annotation.Namespace;
import org.apache.struts2.convention.annotation.ParentPackage;
import org.apache.struts2.convention.annotation.Result;
import org.apache.struts2.convention.annotation.Results;
import org.hibernate.criterion.Order;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Scope;

import com.wisdombud.alumni.actions.base.AbstractCrudAction;
import com.wisdombud.alumni.common.IBaseSrv;
import com.wisdombud.alumni.enums.YesOrNoEnum;
import com.wisdombud.alumni.manage.BaseMessageBoardSrv;
import com.wisdombud.alumni.pojo.manage.BaseMessageBoard;
import com.wisdombud.alumni.vo.Param;

/**
 * 功能: 留言表<br/>
 * date: 2017-3-29 10:13:56 <br/>
 * 
 * @author robot
 * @version
 * @since JDK 1.8
 */
@Scope("prototype")
@ParentPackage(value = "portal-default")
@Namespace(value = "/")
@Results({ @Result(name = "toDetail", location = "/WEB-INF/jsp/message-board/detail.jsp"),
		   @Result(name = "toPage", location = "/WEB-INF/jsp/message-board/page.jsp") })
public class MessageBoardAction extends AbstractCrudAction<BaseMessageBoard> {
	private static final long	serialVersionUID = 1L;
	@Autowired
	private BaseMessageBoardSrv	baseMessageBoardSrv;
	private String				replyContent;
	private String				flag;

	public MessageBoardAction(@Qualifier(value = "baseMessageBoardSrv") IBaseSrv<BaseMessageBoard> baseSrv) {
		super(baseSrv);
	}

	public String audit() {
		if (StringUtils.isNotEmpty(id)) {
			BaseMessageBoard baseMessageBoard = baseMessageBoardSrv.find(id);
			if (flag.equals("0")) {
				baseMessageBoard.setStatus(0);
			} else if (flag.equals("1")) {
				baseMessageBoard.setStatus(1);
			} else {
				LOG.info("flag值没有获取到");
			}
			baseMessageBoardSrv.update(baseMessageBoard);
		}
		return "toPage";
	}

	public void replyMessage() {
		if (StringUtils.isNotEmpty(id)) {
			BaseMessageBoard baseMessageBoard = baseMessageBoardSrv.find(id);
			baseMessageBoard.setReplyContent(replyContent);
			baseMessageBoard.setIsReply(1);
			baseMessageBoardSrv.update(baseMessageBoard);
			this.sendSuccessMsg(null, "发送成功");
		} else {
			this.sendFailMsg(null, "发送失败");
		}
	}

	@Override
	public String hrefDetail() {
		this.initConf();
		entity = this.baseSrv.find(id);
		entity.setStatusName(YesOrNoEnum.valueByIndex(entity.getStatus()).getName());
		entity.setIsReplyName(YesOrNoEnum.valueByIndex(entity.getIsReply()).getName());
		return "toDetail";
	}

	@Override
	protected List<Order> buildOrder() {
		return super.buildOrder();
	}

	@Override
	protected Map<String, Param> buildParams() {
		return super.buildParams();
	}

	public String getReplyContent() {
		return replyContent;
	}

	public void setReplyContent(String replyContent) {
		this.replyContent = replyContent;
	}

	public String getFlag() {
		return flag;
	}

	public void setFlag(String flag) {
		this.flag = flag;
	}
}
